--Main:
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wave"))()
local Main = library:Main()
--Tabs and Sections
local Tab1 = Main:Tab("Tab")
local Tab2 = Main:Tab("Tab two")
local Section1 = Tab1:Section("Section")

--Button:
Section1:Item(
    "button",
    "Button",
    function()
print("hi")
    end
)

--Toggle:
Section1:Item(
    "toggle",
    "Toggle",
    function(value)
        print("hi")
    end
)

--Slider:
Section1:Item(
    "slider",
    "Slider",
    function(value)
        print("hi")
    end
)

--TextBox:
Section1:Item(
    "textbox",
    "TextBox",
    function(value)
        print("hi")
    end,
    {Placeholder = "Hello"}
)

--Dropdown:
Section1:Item(
    "dropdown",
    "DropDown",
    function(value)
        print("hi")
    end,
    {items = {"Item 1", "Item 2", "Item 3", "A", "B", "C"}}
)

--Label:
Section1:Item("label", "Label")

-- Others:

Multiple Game Support: -- lets you run a script on several different games on one loadstring
if game.PlaceId == GameIdHere then
   --script or loadstring here
   end

--Anti-AFK:
wait(3)
local VirtualUser=game:service'VirtualUser'
game:service('Players').LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

--Fly:
local FlyingKey = Enum.KeyCode.B
loadstring(game:HttpGet('https://raw.githubusercontent.com/zachisfunny/Fly-Script/main/Script'))()

--Vehicle Fly:
loadstring(game:HttpGet(('https://raw.githubusercontent.com/zachisfunny/Universal-Vehicle-Fly/main/Script'),true))()

--Chat Logger:
loadstring(game:HttpGet(('https://raw.githubusercontent.com/zachisfunny/Chat-Logger-For-Roblox/main/Script'),true))()

--Attach to back script:
loadstring(game:HttpGet(('https://raw.githubusercontent.com/zachisfunny/Attach-to-back-Script/main/Script'),true))()

--Basic ESP:
loadstring(game:HttpGet(('https://raw.githubusercontent.com/zachisfunny/ROBLOX-ESP/main/Script'),true))()

--NoClip:
game:GetService('RunService').Stepped:connect(function()
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.Torso.CanCollide = false



--Notification:
wait(1) -- in the () is how long u want it to wait before it pups up, in seconds
game.StarterGui:SetCore("SendNotification", {
Title = "this is how"; -- the title (ofc)
Text = "to make a notification"; -- what the text says (ofc)
Icon = "rbxassetid://57254792"; -- change the image id to what u want if u want an image, if not, delete this row.
Duration = 5; -- how long the notification show should in secounds
})

--Smoothly float to a location / Tween:
	local New_CFrame = CFrame.new(the cframe)


	local ts = game:GetService("TweenService")
	local uis = game:GetService("UserInputService")
	local char = game.Players.LocalPlayer.Character

	local part = char.HumanoidRootPart
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear)
	local tp = {CFrame = New_CFrame}

	ts:Create(part, ti, tp):Play()
